import { type WebGLRendererParameters } from 'three';
import type { ThrelteContext } from '../lib/contexts';
/**
 * ### `useRenderer`
 *
 * This hook creates a renderer and listens to changes in the context to
 * update the renderer accordingly.
 *
 * It listens to the following context properties:
 * - `size`
 * - `toneMapping`
 * - `colorSpace`
 * - `dpr`
 * - `shadows`
 * - `colorManagementEnabled`
 */
export declare const useRenderer: (ctx: ThrelteContext) => {
    createRenderer: (canvas: HTMLCanvasElement, rendererParameters: WebGLRendererParameters | undefined) => void;
};
