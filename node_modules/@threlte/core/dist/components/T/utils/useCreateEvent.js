import { onDestroy, onMount } from 'svelte';
import { createRawEventDispatcher } from '../../../lib/createRawEventDispatcher';
export const useCreateEvent = () => {
    const dispatchRaw = createRawEventDispatcher();
    const cleanupFunctions = [];
    let ref = undefined;
    let mounted = false;
    const dispatchCreateEvent = () => {
        // call every cleanup function
        cleanupFunctions.forEach((cleanup) => cleanup());
        // clear the cleanup functions array
        cleanupFunctions.length = 0;
        const cleanup = (callback) => {
            // add cleanup function to array
            cleanupFunctions.push(callback);
        };
        dispatchRaw('create', { ref, cleanup });
    };
    const updateRef = (newRef) => {
        ref = newRef;
        if (!mounted)
            return;
        dispatchCreateEvent();
    };
    onMount(() => {
        dispatchCreateEvent();
        mounted = true;
    });
    onDestroy(() => {
        // call every cleanup function
        cleanupFunctions.forEach((cleanup) => cleanup());
    });
    return {
        updateRef
    };
};
