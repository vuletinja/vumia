import { getContext, onDestroy } from 'svelte';
import { browser } from '../lib/browser';
/**
 * Adds a handler that is called on every invalidated frame. This handler is
 * only called when an actual render should happen.
 * @param fn
 * @param options
 * @returns
 */
export const useRender = (fn, options) => {
    if (!browser) {
        return;
    }
    const renderCtx = getContext('threlte-internal-context');
    if (renderCtx === undefined) {
        throw new Error('No Threlte context found, are you using this hook inside of <Canvas>?');
    }
    const handler = {
        fn,
        order: options?.order
    };
    renderCtx.renderHandlers.add(handler);
    renderCtx.renderHandlersNeedSortCheck = true;
    onDestroy(() => {
        renderCtx.renderHandlers.delete(handler);
    });
};
