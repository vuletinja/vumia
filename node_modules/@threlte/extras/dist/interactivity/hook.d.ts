import type { Object3D } from 'three';
export declare const useInteractivity: () => {
    addInteractiveObject: (object: Object3D) => void;
    removeInteractiveObject: (object: Object3D) => void;
    enabled: import("@threlte/core").CurrentWritable<boolean>;
    target: import("@threlte/core").CurrentWritable<HTMLElement | undefined>;
    pointer: import("@threlte/core").CurrentWritable<import("three").Vector2>;
    pointerOverTarget: import("@threlte/core").CurrentWritable<boolean>;
    lastEvent: import("./types").DomEvent | undefined;
    raycaster: import("three").Raycaster;
    initialClick: [x: number, y: number];
    initialHits: Object3D<import("three").Event>[];
    hovered: Map<string, import("./types").IntersectionEvent<import("./types").DomEvent>>;
    interactiveObjects: Object3D<import("three").Event>[];
    compute: import("./types").ComputeFunction;
    filter?: import("./types").FilterFunction | undefined;
};
