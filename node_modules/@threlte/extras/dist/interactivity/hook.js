import { createRawEventDispatcher } from '@threlte/core';
import { getContext } from 'svelte';
export const useInteractivity = () => {
    const state = getContext('threlte-interactivity-context');
    const eventDispatcher = createRawEventDispatcher();
    const addInteractiveObject = (object) => {
        if (!state) {
            console.warn('No interactivity context found. Did you forget to implement interactivity()?');
            return;
        }
        object.userData._threlte_interactivity_dispatcher = eventDispatcher;
        // check if the object is already in the list
        if (state.interactiveObjects.find((obj) => obj.uuid === object.uuid))
            return;
        state.interactiveObjects.push(object);
    };
    const removeInteractiveObject = (object) => {
        if (!state) {
            console.warn('No interactivity context found. Did you forget to implement interactivity()?');
            return;
        }
        state.interactiveObjects = state.interactiveObjects.filter((obj) => obj.uuid !== object.uuid);
        delete object.userData._threlte_interactivity_dispatcher;
    };
    return {
        ...state,
        addInteractiveObject,
        removeInteractiveObject
    };
};
