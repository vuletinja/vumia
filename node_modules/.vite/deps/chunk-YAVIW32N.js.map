{
  "version": 3,
  "sources": ["../../@threlte/core/dist/hooks/useThrelteInternal.js", "../../@threlte/core/dist/internal/DisposableObject.svelte", "../../@threlte/core/dist/lib/createObjectStore.js", "../../@threlte/core/dist/hooks/useThrelte.js", "../../@threlte/core/dist/hooks/useParent.js", "../../@threlte/core/dist/internal/HierarchicalObject.svelte", "../../@threlte/core/dist/internal/SceneGraphObject.svelte", "../../@threlte/core/dist/components/T/utils/resolvePropertyPath.js", "../../@threlte/core/dist/components/T/utils/useAttach.js", "../../@threlte/core/dist/components/T/utils/useCamera.js", "../../@threlte/core/dist/lib/createRawEventDispatcher.js", "../../@threlte/core/dist/components/T/utils/useCreateEvent.js", "../../@threlte/core/dist/components/T/utils/useEvents.js", "../../@threlte/core/dist/components/T/utils/usePlugins.js", "../../@threlte/core/dist/components/T/utils/useProps.js", "../../@threlte/core/dist/components/T/T.svelte", "../../@threlte/core/dist/lib/browser.js", "../../@threlte/core/dist/hooks/useParentSize.js", "../../@threlte/core/dist/lib/revision.js", "../../@threlte/core/dist/lib/cache.js", "../../@threlte/core/dist/lib/getThrelteUserData.js", "../../@threlte/core/dist/lib/storeUtils.js", "../../@threlte/core/dist/lib/defaultCamera.js", "../../@threlte/core/dist/lib/contexts.js", "../../@threlte/core/dist/lib/startFrameloop.js", "../../@threlte/core/dist/lib/useRenderer.js", "../../@threlte/core/dist/Canvas.svelte", "../../@threlte/core/dist/components/T/T.js", "../../@threlte/core/dist/plugins/injectPlugin.js", "../../@threlte/core/dist/plugins/createPlugin.js", "../../@threlte/core/dist/hooks/useFrame.js", "../../@threlte/core/dist/hooks/useRender.js", "../../@threlte/core/dist/hooks/useThrelteUserContext.js", "../../@threlte/core/dist/lib/asyncWritable.js", "../../@threlte/core/dist/hooks/useLoader.js", "../../@threlte/core/dist/lib/forwardEventHandlers.js"],
  "sourcesContent": ["import { getContext } from 'svelte';\nexport const useThrelteInternal = () => {\n    return getContext('threlte-internal-context');\n};\n", null, "import { onDestroy } from 'svelte';\nimport { writable } from 'svelte/store';\nexport function createObjectStore(object, onChange) {\n    const objectStore = writable(object);\n    let unwrappedObject = object;\n    const unsubscribeObjectStore = objectStore.subscribe((o) => (unwrappedObject = o));\n    onDestroy(unsubscribeObjectStore);\n    const set = (newObject) => {\n        if (newObject?.uuid === unwrappedObject?.uuid)\n            return;\n        const oldObject = unwrappedObject;\n        objectStore.set(newObject);\n        onChange?.(newObject, oldObject);\n    };\n    const update = (callback) => {\n        const newObject = callback(unwrappedObject);\n        if (newObject?.uuid === unwrappedObject?.uuid)\n            return;\n        const oldObject = unwrappedObject;\n        objectStore.set(newObject);\n        onChange?.(newObject, oldObject);\n    };\n    return {\n        ...objectStore,\n        set,\n        update\n    };\n}\n", "import { getContext } from 'svelte';\nexport const useThrelte = () => {\n    const context = getContext('threlte');\n    if (context === undefined) {\n        throw new Error('No Threlte context found, are you using this hook inside of <Canvas>?');\n    }\n    return context;\n};\n", "import { getContext } from 'svelte';\nexport const useParent = () => {\n    return getContext('threlte-hierarchical-parent-context');\n};\n", null, null, "/**\n * ### `resolvePropertyPath`\n *\n * Threlte supports props called \"pierced props\" that allow you to set\n * properties on nested objects. This function resolves a property path to a\n * target object and the property key. The property path can include dots to indicate\n * nested objects.\n *\n * ```svelte\n * <T.PerspectiveCamera position.x={10} />\n * ```\n *\n * … resolves to …\n *\n * ```ts\n * const { target, key } = resolvePropertyPath(camera, 'position.x')\n * target[key] = 10\n * ```\n */\nexport const resolvePropertyPath = (target, propertyPath) => {\n    if (propertyPath.includes('.')) {\n        const path = propertyPath.split('.');\n        const key = path.pop();\n        for (let i = 0; i < path.length; i += 1) {\n            target = target[path[i]];\n        }\n        return {\n            target,\n            key\n        };\n    }\n    else {\n        return {\n            target,\n            key: propertyPath\n        };\n    }\n};\n", "import { onDestroy } from 'svelte';\nimport { useThrelte } from '../../../hooks/useThrelte';\nimport { resolvePropertyPath } from './resolvePropertyPath';\nconst initialValueBeforeAttach = Symbol('initialValueBeforeAttach');\nexport const useAttach = () => {\n    const { invalidate } = useThrelte();\n    let isAttached = false;\n    let valueBeforeAttach = initialValueBeforeAttach;\n    let detachFn;\n    // the target that the object is attached to\n    let attachedTo;\n    // the property name that the object is attached to\n    let attachedKey;\n    const update = (instance, parent, attach) => {\n        detach();\n        // maybe assign 'material' or 'geometry' automatically if not specified\n        if (!attach) {\n            const i = instance;\n            const isMaterial = i?.isMaterial || false;\n            if (isMaterial) {\n                attach = 'material';\n            }\n            const isGeometry = i?.isBufferGeometry || i?.isGeometry || false;\n            if (isGeometry) {\n                attach = 'geometry';\n            }\n        }\n        if (!attach)\n            return;\n        if (typeof attach === 'function') {\n            detachFn = attach(parent, instance);\n        }\n        else {\n            const { target, key } = resolvePropertyPath(parent, attach);\n            valueBeforeAttach = target[key];\n            target[key] = instance;\n            attachedTo = target;\n            attachedKey = key;\n        }\n        isAttached = true;\n        invalidate();\n    };\n    const detach = () => {\n        if (!isAttached)\n            return;\n        if (detachFn) {\n            detachFn();\n            detachFn = undefined;\n        }\n        else if (attachedTo && attachedKey && valueBeforeAttach !== initialValueBeforeAttach) {\n            attachedTo[attachedKey] = valueBeforeAttach;\n            valueBeforeAttach = initialValueBeforeAttach;\n            attachedTo = undefined;\n            attachedKey = undefined;\n        }\n        isAttached = false;\n        invalidate();\n    };\n    onDestroy(() => {\n        detach();\n    });\n    return {\n        update\n    };\n};\n", "import { onDestroy } from 'svelte';\nimport { useThrelte } from '../../../hooks/useThrelte';\nconst isCamera = (value) => {\n    return value && value.isCamera;\n};\nconst isOrthographicCamera = (value) => {\n    return value && value.isOrthographicCamera;\n};\nconst isPerspectiveCamera = (value) => {\n    return value && value.isPerspectiveCamera;\n};\nconst isPerspectiveCameraOrOrthographicCamera = (value) => {\n    return isPerspectiveCamera(value) || isOrthographicCamera(value);\n};\nexport const useCamera = () => {\n    const { invalidate, size, camera } = useThrelte();\n    let currentInstance;\n    let unsubscribe = undefined;\n    onDestroy(() => {\n        unsubscribe?.();\n    });\n    const subscriber = (size) => {\n        if (!currentInstance)\n            return;\n        if (isOrthographicCamera(currentInstance)) {\n            currentInstance.left = size.width / -2;\n            currentInstance.right = size.width / 2;\n            currentInstance.top = size.height / 2;\n            currentInstance.bottom = size.height / -2;\n            currentInstance.updateProjectionMatrix();\n            currentInstance.updateMatrixWorld();\n            invalidate();\n        }\n        else if (isPerspectiveCamera(currentInstance)) {\n            currentInstance.aspect = size.width / size.height;\n            currentInstance.updateProjectionMatrix();\n            currentInstance.updateMatrixWorld();\n            invalidate();\n        }\n    };\n    const update = (instance, manual) => {\n        unsubscribe?.();\n        if (manual || !isPerspectiveCameraOrOrthographicCamera(instance)) {\n            currentInstance = undefined;\n            return;\n        }\n        currentInstance = instance;\n        unsubscribe = size.subscribe(subscriber);\n    };\n    const makeDefaultCamera = (instance, makeDefault) => {\n        if (!isCamera(instance) || !makeDefault)\n            return;\n        camera.set(instance);\n        invalidate();\n    };\n    return {\n        update,\n        makeDefaultCamera\n    };\n};\n", "import { get_current_component } from 'svelte/internal';\n/**\n * ### `createRawEventDispatcher`\n *\n * This event dispatcher creates raw events unlike Svelte's own event dispatcher\n * which nests the data in a detail object (`CustomEvent<Payload>`). This is not\n * nesessary for a lot of Threlte use cases and makes it harder to work with the payload.\n *\n * @example\n *\n * ComponentA.svelte:\n * ```svelte\n * <script>\n * \tconst dispatch = createRawEventDispatcher<{ foo: string }>()\n * \tdispatch('foo', 'bar')\n * </script>\n * ```\n *\n * ComponentB.svelte:\n * ```svelte\n * <ComponentA on:foo={(e) => console.log(e)} /> <!-- 'bar' -->\n * ```\n */\nexport const createRawEventDispatcher = () => {\n    const component = get_current_component();\n    const dispatchRawEvent = (type, value) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            callbacks.forEach((fn) => {\n                fn(value);\n            });\n        }\n    };\n    const hasEventListener = (type) => {\n        return Boolean(component.$$.callbacks[type]);\n    };\n    Object.defineProperty(dispatchRawEvent, 'hasEventListener', {\n        value: hasEventListener,\n        enumerable: true\n    });\n    return dispatchRawEvent;\n};\n", "import { onDestroy, onMount } from 'svelte';\nimport { createRawEventDispatcher } from '../../../lib/createRawEventDispatcher';\nexport const useCreateEvent = () => {\n    const dispatchRaw = createRawEventDispatcher();\n    const cleanupFunctions = [];\n    let ref = undefined;\n    let mounted = false;\n    const dispatchCreateEvent = () => {\n        // call every cleanup function\n        cleanupFunctions.forEach((cleanup) => cleanup());\n        // clear the cleanup functions array\n        cleanupFunctions.length = 0;\n        const cleanup = (callback) => {\n            // add cleanup function to array\n            cleanupFunctions.push(callback);\n        };\n        dispatchRaw('create', { ref, cleanup });\n    };\n    const updateRef = (newRef) => {\n        ref = newRef;\n        if (!mounted)\n            return;\n        dispatchCreateEvent();\n    };\n    onMount(() => {\n        dispatchCreateEvent();\n        mounted = true;\n    });\n    onDestroy(() => {\n        // call every cleanup function\n        cleanupFunctions.forEach((cleanup) => cleanup());\n    });\n    return {\n        updateRef\n    };\n};\n", "import { onDestroy, onMount } from 'svelte';\nimport { get_current_component } from 'svelte/internal';\nimport { writable } from 'svelte/store';\nimport { createRawEventDispatcher } from '../../../lib/createRawEventDispatcher';\n/**\n * Typeguard to check if a value is extending THREE.EventDispatcher\n * @param value\n * @returns\n */\nconst isEventDispatcher = (value) => {\n    return !!value?.addEventListener;\n};\nexport const useEvents = () => {\n    const dispatch = createRawEventDispatcher();\n    const component = get_current_component();\n    const eventHandlerProxy = (event) => {\n        if (event?.type) {\n            dispatch(event.type, event);\n        }\n    };\n    const cleanupEventListeners = (ref, events) => {\n        if (isEventDispatcher(ref)) {\n            events.forEach((eventName) => {\n                ref.removeEventListener(eventName, eventHandlerProxy);\n            });\n        }\n    };\n    const addEventListeners = (ref, events) => {\n        if (isEventDispatcher(ref)) {\n            events.forEach((eventName) => {\n                ref.addEventListener(eventName, eventHandlerProxy);\n            });\n        }\n    };\n    let currentEventNames = [];\n    let currentRef;\n    const eventNames = writable([]);\n    const unsubscribeEventNames = eventNames.subscribe((eventNames) => {\n        cleanupEventListeners(currentRef, currentEventNames);\n        addEventListeners(currentRef, eventNames);\n        currentEventNames = eventNames;\n    });\n    onDestroy(unsubscribeEventNames);\n    const ref = writable();\n    const unsubscribeRef = ref.subscribe((value) => {\n        cleanupEventListeners(currentRef, currentEventNames);\n        addEventListeners(value, currentEventNames);\n        currentRef = value;\n    });\n    onDestroy(unsubscribeRef);\n    // cleanup all event listeners\n    onDestroy(() => {\n        cleanupEventListeners(currentRef, currentEventNames);\n    });\n    // get all event callbacks from component\n    onMount(() => {\n        eventNames.set(Object.keys(component.$$.callbacks));\n    });\n    const updateRef = (newRef) => {\n        ref.set(newRef);\n    };\n    return {\n        updateRef\n    };\n};\n", "import { getContext, onDestroy } from 'svelte';\nexport const usePlugins = (params) => {\n    const pluginContextName = 'threlte-plugin-context';\n    const plugins = getContext(pluginContextName);\n    if (!plugins)\n        return;\n    const pluginsReturns = Object.values(plugins)\n        .map((plugin) => plugin(params))\n        .filter(Boolean);\n    const pluginsProps = pluginsReturns.flatMap((callback) => callback.pluginProps ?? []);\n    let refCleanupCallbacks = [];\n    onDestroy(() => {\n        refCleanupCallbacks.forEach((callback) => callback());\n    });\n    const updateRef = (ref) => {\n        refCleanupCallbacks.forEach((callback) => callback());\n        refCleanupCallbacks = [];\n        pluginsReturns.forEach((callback) => {\n            const cleanupCallback = callback.onRefChange?.(ref);\n            if (cleanupCallback) {\n                refCleanupCallbacks.push(cleanupCallback);\n            }\n        });\n    };\n    const updateProps = (props) => {\n        pluginsReturns.forEach((callback) => {\n            callback.onPropsChange?.(props);\n        });\n    };\n    const updateRestProps = (restProps) => {\n        pluginsReturns.forEach((callback) => {\n            callback.onRestPropsChange?.(restProps);\n        });\n    };\n    return {\n        updateRef,\n        updateProps,\n        updateRestProps,\n        pluginsProps\n    };\n};\n", "import { useThrelte } from '../../../hooks/useThrelte';\nimport { resolvePropertyPath } from './resolvePropertyPath';\nconst ignoredProps = new Set(['$$scope', '$$slots', 'type', 'args', 'attach', 'instance']);\nconst updateProjectionMatrixKeys = new Set([\n    'fov',\n    'aspect',\n    'near',\n    'far',\n    'left',\n    'right',\n    'top',\n    'bottom',\n    'zoom'\n]);\n/**\n * Only scalar values are memoized, objects and arrays are considered\n * non-equa by default, to ensure reactivity works as you would\n * expect in svelte.\n * @param value\n * @returns\n */\nexport const memoizeProp = (value) => {\n    // scalar values are memoized\n    if (typeof value === 'string')\n        return true;\n    if (typeof value === 'number')\n        return true;\n    if (typeof value === 'boolean')\n        return true;\n    if (typeof value === 'undefined')\n        return true;\n    if (value === null)\n        return true;\n    // objects and arrays cannot be reliably memoized\n    return false;\n};\nexport const useProps = () => {\n    const { invalidate } = useThrelte();\n    const memoizedProps = new Map();\n    const setProp = (instance, propertyPath, value, options) => {\n        if (memoizeProp(value)) {\n            const memoizedProp = memoizedProps.get(propertyPath);\n            if (memoizedProp && memoizedProp.instance === instance && memoizedProp.value === value) {\n                return;\n            }\n            memoizedProps.set(propertyPath, {\n                instance,\n                value\n            });\n        }\n        const { key, target } = resolvePropertyPath(instance, propertyPath);\n        if (!Array.isArray(value) &&\n            typeof value === 'number' &&\n            typeof target[key]?.setScalar === 'function') {\n            // edge case of setScalar setters\n            target[key].setScalar(value);\n        }\n        else {\n            if (typeof target[key]?.set === 'function') {\n                // if the property has a \"set\" function, we can use it\n                if (Array.isArray(value)) {\n                    target[key].set(...value);\n                }\n                else {\n                    target[key].set(value);\n                }\n            }\n            else {\n                // otherwise, we just set the value\n                target[key] = value;\n                if (options.manualCamera)\n                    return;\n                if (updateProjectionMatrixKeys.has(key) &&\n                    (target.isPerspectiveCamera || target.isOrthographicCamera)) {\n                    target.updateProjectionMatrix();\n                }\n            }\n        }\n    };\n    const updateProps = (instance, props, options) => {\n        for (const key in props) {\n            if (!ignoredProps.has(key) && !options.pluginsProps?.includes(key)) {\n                setProp(instance, key, props[key], options);\n            }\n            invalidate();\n        }\n    };\n    return {\n        updateProps\n    };\n};\n", null, "export const browser = typeof window !== 'undefined';\n", "import { onDestroy } from 'svelte';\nimport { writable } from 'svelte/store';\nimport { browser } from '../lib/browser';\nexport const useParentSize = () => {\n    const parentSize = writable({ width: 0, height: 0 });\n    if (!browser) {\n        return {\n            parentSize,\n            parentSizeAction: () => {\n                /* do nothing */\n            }\n        };\n    }\n    // Only observe childList changes of the parent\n    const mutationOptions = { childList: true, subtree: false, attributes: false };\n    let el;\n    const observeParent = (parent) => {\n        resizeObserver.disconnect();\n        mutationObserver.disconnect();\n        resizeObserver.observe(parent);\n        mutationObserver.observe(parent, mutationOptions);\n    };\n    // The canvas should match the contentRect of its parent\n    const resizeObserver = new ResizeObserver(([entry]) => {\n        const { contentRect } = entry;\n        parentSize.set({\n            width: contentRect.width,\n            height: contentRect.height\n        });\n    });\n    // Use a mutation observer to detect reparenting\n    const mutationObserver = new MutationObserver((mutationsList) => {\n        for (const mutation of mutationsList) {\n            for (const node of mutation.removedNodes) {\n                if (el === node && el.parentElement) {\n                    observeParent(el.parentElement);\n                    return;\n                }\n            }\n        }\n    });\n    const parentSizeAction = (node) => {\n        el = node;\n        if (!el.parentElement)\n            return;\n        observeParent(el.parentElement);\n    };\n    onDestroy(() => {\n        resizeObserver.disconnect();\n        mutationObserver.disconnect();\n    });\n    return {\n        parentSize,\n        parentSizeAction\n    };\n};\n", "import { REVISION } from 'three';\n// REVISION can be '{number}' or '{number}dev'\nexport const revision = Number.parseInt(REVISION.replace('dev', ''));\n", "/**\n * @file This file contains the cache implementation for Threlte. The cache is\n * used to cache the return value of a promise based on the provided keys.\n */\nimport { getContext, setContext } from 'svelte';\nexport const shallowEqualArrays = (arrA, arrB) => {\n    if (arrA === arrB)\n        return true;\n    if (!arrA || !arrB)\n        return false;\n    const len = arrA.length;\n    if (arrB.length !== len)\n        return false;\n    for (let i = 0; i < len; i++)\n        if (arrA[i] !== arrB[i])\n            return false;\n    return true;\n};\n/**\n * ### `createCache`\n *\n * Every Threlte application has its own cache. This prevents models from being\n * shared between applications because e.g. THREE.Mesh objects cannot be mounted\n * in multiple scenes.\n */\nexport const createCache = () => {\n    setContext('threlte-cache', []);\n};\n/**\n * ### `useCache`\n *\n * This hook is used to access the cache. It returns a `remember` function that\n * can be used to cache a promise based on the provided keys. The `remember`\n * function will return the cached value if the promise has already been\n * resolved and the keys match.\n *\n * @example\n * ```ts\n * const { remember } = useCache()\n *\n * const asnycWritable = remember(async () => {\n *  const loader = new GLTFLoader()\n *  const { scene } = await loader.loadAsync('/path/to/model.glb')\n *  return scene\n * })\n * ```\n *\n * The model will only be loaded once, even if `remember` is invoked multiple\n * times with the same keys.\n *\n * The `clear` function can be used to clear the cache for a specific set of keys.\n */\nexport const useCache = () => {\n    const cache = getContext('threlte-cache');\n    if (!cache) {\n        throw new Error('No cache found. The cache can only be used in a child component to <Canvas>.');\n    }\n    const remember = (callback, keys) => {\n        for (const entry of cache) {\n            // Find a match\n            if (shallowEqualArrays(keys, entry.keys)) {\n                // If an error occurred, throw\n                if (entry.error)\n                    throw entry.error;\n                // If a response is pending, return\n                if (entry.promise)\n                    return entry.promise;\n            }\n        }\n        // If no match was found, create a new entry\n        const entry = {\n            promise: callback(),\n            keys,\n            value: undefined\n        };\n        // Add the entry to the cache\n        cache.push(entry);\n        // Add a catch handler to the promise\n        entry.promise.catch((error) => {\n            // store the error\n            entry.error = error;\n            // we don't throw here\n        });\n        // Return the promise\n        return entry.promise;\n    };\n    const clear = (keys) => {\n        const index = cache.findIndex((entry) => shallowEqualArrays(keys, entry.keys));\n        if (index !== -1) {\n            cache.splice(index, 1);\n        }\n    };\n    return {\n        remember,\n        clear\n    };\n};\n", "export const getThrelteUserData = (object) => {\n    return object.userData;\n};\n", "import { onDestroy } from 'svelte';\nimport { derived, writable } from 'svelte/store';\n/**\n * ### `watch`\n *\n * Watch a single store or multiple stores and call a callback when they change to trigger side effects.\n * The callback can return a cleanup function that will be called when the stores change again or when the component is destroyed.\n *\n * ```ts\n * const store = writable(0)\n *\n * watch(store, (value) => {\n * \tconsole.log(value) // 0\n * })\n * ```\n *\n * You can also watch multiple stores:\n *\n * ```ts\n * const store1 = writable(0)\n * const store2 = writable(1)\n *\n * watch([store1, store2], ([value1, value2]) => {\n * \tconsole.log(value1, value2) // 0 1\n * })\n * ```\n *\n * The callback can return a cleanup function that will be called when the stores change again or when the component is destroyed.\n *\n * ```ts\n * const store = writable(0)\n *\n * watch(store, (value) => {\n * \tconsole.log(value) // 0\n * \treturn () => {\n * \t\tconsole.log('cleanup')\n * \t}\n * })\n * ```\n *\n * @param stores\n * @param callback\n */\nexport const watch = (stores, callback) => {\n    const d = derived(stores, (values) => {\n        return values;\n    });\n    let cleanupFn;\n    const unsubscribe = d.subscribe(async (values) => {\n        if (cleanupFn)\n            cleanupFn();\n        const fn = await callback(values);\n        if (fn)\n            cleanupFn = fn;\n    });\n    onDestroy(() => {\n        unsubscribe();\n        if (cleanupFn)\n            cleanupFn();\n    });\n};\nexport function memoize(stores, transform) {\n    const obj = {\n        current: undefined\n    };\n    watch(stores, (v) => {\n        obj.current = transform ? transform(v) : v;\n    });\n    return obj;\n}\n/**\n * ### `currentWritable`\n *\n * A writable store that also has a `current` property that is updated synchronously.\n * For use in non-reactive contexts e.g. loops where unwrapping a store every frame is expensive.\n *\n * ```ts\n * const store = currentWritable(0)\n *\n * useFrame(() => {\n * \tconsole.log(store.current) // 0\n * })\n *\n * @param value\n * @returns\n */\nexport const currentWritable = (value) => {\n    const store = writable(value);\n    const extendedWritable = {\n        set: (value) => {\n            extendedWritable.current = value;\n            store.set(value);\n        },\n        subscribe: store.subscribe,\n        update: (fn) => {\n            const newValue = fn(extendedWritable.current);\n            extendedWritable.current = newValue;\n            store.set(newValue);\n        },\n        current: value\n    };\n    return extendedWritable;\n};\n", "import { get } from 'svelte/store';\nimport { PerspectiveCamera } from 'three';\nimport { getThrelteUserData } from './getThrelteUserData';\nimport { watch } from './storeUtils';\nexport const createDefaultCamera = () => {\n    const defaultCamera = new PerspectiveCamera(75, 0, 0.1, 1000);\n    getThrelteUserData(defaultCamera).threlteDefaultCamera = true;\n    defaultCamera.position.z = 5;\n    defaultCamera.lookAt(0, 0, 0);\n    return defaultCamera;\n};\nexport const setDefaultCameraAspectOnSizeChange = (ctx) => {\n    watch(ctx.size, (size) => {\n        if (getThrelteUserData(get(ctx.camera)).threlteDefaultCamera) {\n            ctx.camera.update((c) => {\n                const cam = c;\n                cam.aspect = size.width / size.height;\n                cam.updateProjectionMatrix();\n                ctx.invalidate('Default camera: aspect ratio changed');\n                return cam;\n            });\n        }\n    });\n};\n", "import { setContext, tick } from 'svelte';\nimport { derived } from 'svelte/store';\nimport { Clock, Scene } from 'three';\nimport { createDefaultCamera } from './defaultCamera';\nimport { currentWritable } from './storeUtils';\n/**\n * ### `createContexts`\n *\n * This function creates the context objects `ThrelteContext` and\n * `ThrelteInternalContext` for a Threlte application.\n */\nexport const createContexts = (options) => {\n    const internalCtx = {\n        debugFrameloop: options.debugFrameloop,\n        frame: 0,\n        frameInvalidated: true,\n        invalidations: {},\n        manualFrameHandlers: new Set(),\n        autoFrameHandlers: new Set(),\n        allFrameHandlers: new Set(),\n        allFrameHandlersNeedSortCheck: false,\n        renderHandlers: new Set(),\n        renderHandlersNeedSortCheck: false,\n        advance: false,\n        dispose: async (force = false) => {\n            await tick();\n            if (!internalCtx.shouldDispose && !force)\n                return;\n            internalCtx.disposableObjects.forEach((mounted, object) => {\n                if (mounted === 0 || force) {\n                    object?.dispose?.();\n                    internalCtx.disposableObjects.delete(object);\n                }\n            });\n            internalCtx.shouldDispose = false;\n        },\n        collectDisposableObjects: (object, objects) => {\n            const disposables = objects ?? [];\n            if (!object)\n                return disposables;\n            // Scenes can't be disposed\n            if (object?.dispose && typeof object.dispose === 'function' && object.type !== 'Scene') {\n                disposables.push(object);\n            }\n            // iterate over properties of object\n            Object.entries(object).forEach(([propKey, propValue]) => {\n                // we don't want to dispose the parent, we can skip \"children\"\n                if (propKey === 'parent' || propKey === 'children' || typeof propValue !== 'object')\n                    return;\n                const value = propValue;\n                if (value?.dispose) {\n                    internalCtx.collectDisposableObjects(value, disposables);\n                }\n            });\n            return disposables;\n        },\n        addDisposableObjects: (objects) => {\n            objects.forEach((obj) => {\n                const currentValue = internalCtx.disposableObjects.get(obj);\n                if (currentValue) {\n                    internalCtx.disposableObjects.set(obj, currentValue + 1);\n                }\n                else {\n                    internalCtx.disposableObjects.set(obj, 1);\n                }\n            });\n        },\n        removeDisposableObjects: (objects) => {\n            if (objects.length === 0)\n                return;\n            objects.forEach((obj) => {\n                const currentValue = internalCtx.disposableObjects.get(obj);\n                if (currentValue && currentValue > 0) {\n                    internalCtx.disposableObjects.set(obj, currentValue - 1);\n                }\n            });\n            internalCtx.shouldDispose = true;\n        },\n        disposableObjects: new Map(),\n        shouldDispose: false\n    };\n    const ctx = {\n        size: derived([options.userSize, options.parentSize], ([uSize, pSize]) => {\n            return uSize ? uSize : pSize;\n        }),\n        clock: new Clock(),\n        camera: currentWritable(createDefaultCamera()),\n        scene: new Scene(),\n        renderer: undefined,\n        invalidate: (debugFrameloopMessage) => {\n            internalCtx.frameInvalidated = true;\n            if (internalCtx.debugFrameloop && debugFrameloopMessage) {\n                internalCtx.invalidations[debugFrameloopMessage] = internalCtx.invalidations[debugFrameloopMessage]\n                    ? internalCtx.invalidations[debugFrameloopMessage] + 1\n                    : 1;\n            }\n        },\n        advance: () => {\n            internalCtx.advance = true;\n        },\n        colorSpace: currentWritable(options.colorSpace),\n        toneMapping: currentWritable(options.toneMapping),\n        dpr: currentWritable(options.dpr),\n        useLegacyLights: currentWritable(options.useLegacyLights),\n        shadows: currentWritable(options.shadows),\n        colorManagementEnabled: currentWritable(options.colorManagementEnabled),\n        frameloop: currentWritable(options.frameloop)\n    };\n    const userCtx = currentWritable({});\n    setContext('threlte', ctx);\n    setContext('threlte-internal-context', internalCtx);\n    setContext('threlte-user-context', userCtx);\n    const getCtx = () => ctx;\n    const getInternalCtx = () => internalCtx;\n    return {\n        ctx,\n        internalCtx,\n        getCtx,\n        getInternalCtx\n    };\n};\n", "const runUseFrameCallbacks = (ctx, internalCtx, delta) => {\n    if (internalCtx.allFrameHandlers.size === 0)\n        return;\n    if (internalCtx.allFrameHandlersNeedSortCheck) {\n        const arr = Array.from(internalCtx.allFrameHandlers);\n        const needsSort = arr.some((h) => h.order);\n        if (needsSort) {\n            const sorted = arr.sort((a, b) => ((a.order ?? 0) > (b.order ?? 0) ? 1 : -1));\n            internalCtx.allFrameHandlers.clear();\n            sorted.forEach((h) => internalCtx.allFrameHandlers.add(h));\n        }\n        internalCtx.allFrameHandlersNeedSortCheck = false;\n    }\n    if (internalCtx.debugFrameloop) {\n        let genericFrameHandlers = 0;\n        internalCtx.autoFrameHandlers.forEach((h) => {\n            if (h.debugFrameloopMessage) {\n                internalCtx.invalidations[h.debugFrameloopMessage] =\n                    h.debugFrameloopMessage in internalCtx.invalidations\n                        ? internalCtx.invalidations[h.debugFrameloopMessage] + 1\n                        : 1;\n            }\n            else {\n                ++genericFrameHandlers;\n            }\n        });\n        if (genericFrameHandlers > 0)\n            internalCtx.invalidations['useFrame'] = internalCtx.autoFrameHandlers.size;\n    }\n    internalCtx.allFrameHandlers.forEach((h) => h.fn(ctx, delta));\n};\nconst runUseRenderCallbacks = (ctx, internalCtx, delta) => {\n    if (internalCtx.renderHandlers.size === 0)\n        return;\n    if (internalCtx.renderHandlersNeedSortCheck) {\n        const arr = Array.from(internalCtx.renderHandlers);\n        const needsSort = arr.some((h) => h.order);\n        if (needsSort) {\n            const sorted = arr.sort((a, b) => ((a.order ?? 0) > (b.order ?? 0) ? 1 : -1));\n            internalCtx.renderHandlers.clear();\n            sorted.forEach((h) => internalCtx.renderHandlers.add(h));\n        }\n        internalCtx.renderHandlersNeedSortCheck = false;\n    }\n    internalCtx.renderHandlers.forEach((h) => h.fn(ctx, delta));\n};\nconst debugFrame = (internalCtx) => {\n    if (!internalCtx.debugFrameloop)\n        return;\n    internalCtx.frame += 1;\n    // prettier-ignore\n    console.log(`frame: ${internalCtx.frame}${Object.keys(internalCtx.invalidations).length > 0 ? ', requested by ↴' : ''}`);\n    if (Object.keys(internalCtx.invalidations).length > 0)\n        console.table(internalCtx.invalidations);\n    internalCtx.invalidations = {};\n};\nconst shouldRender = (ctx, internalCtx) => {\n    return (ctx.frameloop.current === 'always' ||\n        (ctx.frameloop.current === 'demand' &&\n            (internalCtx.frameInvalidated || internalCtx.autoFrameHandlers.size > 0)) ||\n        (ctx.frameloop.current === 'never' && internalCtx.advance));\n};\n/**\n * ### `useFrameloop`\n *\n * This function is responsible for starting all `useFrame` and `useRender`\n * callbacks, and for rendering the scene if no `useRender` callbacks are\n * present.\n *\n * It also handles disposing objects that are due to be disposed right before any\n * `useFrame` callbacks are run.\n *\n * A global delta is calculated and passed to all `useFrame` and `useRender` callbacks.\n */\nexport const startFrameloop = (ctx, internalCtx) => {\n    ctx.renderer.setAnimationLoop(() => {\n        // dispose all objects that are due to be disposed\n        internalCtx.dispose();\n        // get a global delta\n        const delta = ctx.clock.getDelta();\n        // run all useFrame callbacks\n        runUseFrameCallbacks(ctx, internalCtx, delta);\n        // if we're not rendering, return\n        if (!shouldRender(ctx, internalCtx))\n            return;\n        if (internalCtx.renderHandlers.size > 0) {\n            // run all useRender callbacks, or …\n            runUseRenderCallbacks(ctx, internalCtx, delta);\n        }\n        else if (ctx.camera.current) {\n            // … render the scene with the default renderer\n            ctx.renderer.render(ctx.scene, ctx.camera.current);\n        }\n        // if we're debugging, log the frame\n        debugFrame(internalCtx);\n        // reset the frameInvalidated flag\n        internalCtx.frameInvalidated = false;\n        // reset the advance flag\n        internalCtx.advance = false;\n    });\n};\n", "import { writable } from 'svelte/store';\nimport { \n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nColorManagement, LinearEncoding, PCFSoftShadowMap, sRGBEncoding, WebGLRenderer } from 'three';\nimport { revision } from './revision';\nimport { watch } from './storeUtils';\n/**\n * March 2023: Three.js is making a transition to a new color management system. Part of\n * that is that the renderer will accept a `colorSpace` property rather than a\n * property `encoding`. As a fallback for older three versions, we need to map\n * the new `colorSpace` to the old `encoding`.\n */\nconst colorSpaceToEncoding = {\n    srgb: sRGBEncoding,\n    'srgb-linear': LinearEncoding,\n    '': LinearEncoding\n};\nconst rendererHasOutputColorSpaceProperty = (renderer) => {\n    return renderer.outputColorSpace !== undefined;\n};\n/**\n * ### `useRenderer`\n *\n * This hook creates a renderer and listens to changes in the context to\n * update the renderer accordingly.\n *\n * It listens to the following context properties:\n * - `size`\n * - `toneMapping`\n * - `colorSpace`\n * - `dpr`\n * - `shadows`\n * - `colorManagementEnabled`\n */\nexport const useRenderer = (ctx) => {\n    const renderer = writable(undefined);\n    const createRenderer = (canvas, rendererParameters) => {\n        ctx.renderer = new WebGLRenderer({\n            powerPreference: 'high-performance',\n            canvas,\n            antialias: true,\n            alpha: true,\n            ...rendererParameters\n        });\n        renderer.set(ctx.renderer);\n    };\n    watch([\n        renderer,\n        ctx.size,\n        ctx.toneMapping,\n        ctx.colorSpace,\n        ctx.dpr,\n        ctx.shadows,\n        ctx.colorManagementEnabled,\n        ctx.useLegacyLights\n    ], ([renderer, size, toneMapping, colorSpace, dpr, shadows, colorManagementEnabled, useLegacyLights]) => {\n        if (!renderer)\n            return;\n        renderer.setSize(size.width, size.height);\n        renderer.setPixelRatio(dpr);\n        // check if the renderer has a colorSpace property, if so, use that\n        // otherwise, use the old encoding property\n        if (rendererHasOutputColorSpaceProperty(renderer)) {\n            renderer.outputColorSpace = colorSpace;\n        }\n        else {\n            const encoding = colorSpaceToEncoding[colorSpace];\n            if (!encoding) {\n                console.warn('No encoding found for colorSpace', colorSpace);\n            }\n            else {\n                renderer.outputEncoding = encoding;\n            }\n        }\n        renderer.toneMapping = toneMapping;\n        renderer.shadowMap.enabled = !!shadows;\n        if (shadows && shadows !== true) {\n            renderer.shadowMap.type = shadows;\n        }\n        else if (shadows === true) {\n            renderer.shadowMap.type = PCFSoftShadowMap;\n        }\n        const cm = ColorManagement;\n        if (revision >= 150) {\n            // since three.js r150 the color management prop is\n            // called \"enabled\", but the types are not up to date :/\n            cm.enabled = colorManagementEnabled;\n        }\n        else {\n            cm.legacyMode = !colorManagementEnabled;\n        }\n        const anyRenderer = renderer;\n        if (revision >= 150 && useLegacyLights) {\n            anyRenderer.useLegacyLights = useLegacyLights;\n        }\n        else if (revision < 150) {\n            anyRenderer.physicallyCorrectLights = !useLegacyLights;\n        }\n    });\n    return {\n        createRenderer\n    };\n};\n", null, "import * as THREE from 'three';\nimport TComp from './T.svelte';\nconst catalogue = {};\n/**\n * Extends the default THREE namespace and allows using custom Three.js objects with `<T>`.\n *\n * @example\n * ```svelte\n * <script>\n * \timport { extend, T } from 'threlte'\n * \timport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\n *\n * \textend({ OrbitControls })\n * </script>\n *\n * <T.OrbitControls />\n * ```\n */\nexport const extend = (extensions) => {\n    Object.assign(catalogue, extensions);\n};\nconst augmentConstructorArgs = (args, is) => {\n    const module = catalogue[is] || THREE[is];\n    if (!module) {\n        throw new Error(`No Three.js module found for ${is}. Did you forget to extend the catalogue?`);\n    }\n    return {\n        ...args,\n        props: {\n            ...args.props,\n            is: module\n        }\n    };\n};\nconst proxyTConstructor = (is) => {\n    return new Proxy(class {\n    }, {\n        construct(_, [args]) {\n            const castedArgs = args;\n            return new TComp(augmentConstructorArgs(castedArgs, is));\n        }\n    });\n};\n/**\n * ## `<T>`\n *\n * Threlte's `<T>` component is a wrapper around Three.js objects. It is a generic component that can be used to create any Three.js object.\n *\n * @example\n *\n * ```svelte\n * <script>\n * \timport { T } from 'threlte'\n * </script>\n *\n * <T.PerspectiveCamera makeDefault />\n *\n * <T.Mesh>\n * \t<T.BoxGeometry />\n * \t<T.MeshBasicMaterial color=\"red\" />\n * </T.Mesh>\n * ```\n */\nexport const T = new Proxy(class {\n}, {\n    construct(_, [args]) {\n        const castedArgs = args;\n        return new TComp(castedArgs);\n    },\n    get(_, is) {\n        return proxyTConstructor(is);\n    }\n});\n", "import { getContext, setContext } from 'svelte';\nexport function injectPlugin(nameOrNamedPlugin, maybePlugin) {\n    const contextName = 'threlte-plugin-context';\n    if (Array.isArray(nameOrNamedPlugin)) {\n        const [name, plugin] = nameOrNamedPlugin;\n        setContext(contextName, {\n            ...getContext(contextName),\n            [name]: plugin\n        });\n    }\n    else {\n        const name = nameOrNamedPlugin;\n        const plugin = maybePlugin;\n        if (!plugin)\n            return;\n        setContext(contextName, {\n            ...getContext(contextName),\n            [name]: plugin\n        });\n    }\n}\n", "export function createPlugin(name, plugin) {\n    return [name, plugin];\n}\n", "import { getContext, onDestroy } from 'svelte';\nimport { readable, writable } from 'svelte/store';\nimport { browser } from '../lib/browser';\n/**\n * Adds a handler to threltes unified render loop.\n *\n * `start` and `stop` functions are returned and the options allow\n * setting the handler to not start automatically.\n *\n * Provide an order to have your framehandlers running in a specific order.\n * Handlers are ordered from low to high when executing.\n * @param {(ctx: ThrelteContext, delta: number) => void} fn callback function\n * @param {ThrelteUseFrameOptions} options options\n * @returns {ThrelteUseFrame}\n */\nexport const useFrame = (fn, options) => {\n    if (!browser) {\n        return {\n            start: () => undefined,\n            stop: () => undefined,\n            started: readable(false)\n        };\n    }\n    const renderCtx = getContext('threlte-internal-context');\n    if (renderCtx === undefined) {\n        throw new Error('No Threlte context found, are you using this hook inside of <Canvas>?');\n    }\n    const invalidate = options?.invalidate ?? true;\n    const handler = {\n        fn,\n        order: options?.order,\n        debugFrameloopMessage: options?.debugFrameloopMessage,\n        invalidate\n    };\n    const started = writable(false);\n    const stop = () => {\n        if (invalidate) {\n            renderCtx.autoFrameHandlers.delete(handler);\n        }\n        else {\n            renderCtx.manualFrameHandlers.delete(handler);\n        }\n        renderCtx.allFrameHandlers.delete(handler);\n        started.set(false);\n    };\n    const start = () => {\n        if (invalidate) {\n            renderCtx.autoFrameHandlers.add(handler);\n        }\n        else {\n            renderCtx.manualFrameHandlers.add(handler);\n        }\n        renderCtx.allFrameHandlers.add(handler);\n        renderCtx.allFrameHandlersNeedSortCheck = true;\n        started.set(true);\n    };\n    if (options?.autostart ?? true) {\n        start();\n    }\n    onDestroy(() => {\n        stop();\n    });\n    return {\n        start,\n        stop,\n        started: {\n            subscribe: started.subscribe\n        }\n    };\n};\n", "import { getContext, onDestroy } from 'svelte';\nimport { browser } from '../lib/browser';\n/**\n * Adds a handler that is called on every invalidated frame. This handler is\n * only called when an actual render should happen.\n * @param fn\n * @param options\n * @returns\n */\nexport const useRender = (fn, options) => {\n    if (!browser) {\n        return;\n    }\n    const renderCtx = getContext('threlte-internal-context');\n    if (renderCtx === undefined) {\n        throw new Error('No Threlte context found, are you using this hook inside of <Canvas>?');\n    }\n    const handler = {\n        fn,\n        order: options?.order\n    };\n    renderCtx.renderHandlers.add(handler);\n    renderCtx.renderHandlersNeedSortCheck = true;\n    onDestroy(() => {\n        renderCtx.renderHandlers.delete(handler);\n    });\n};\n", "import { getContext } from 'svelte';\nimport { derived } from 'svelte/store';\nexport function useThrelteUserContext(namespace, value, options) {\n    const userCtxStore = getContext('threlte-user-context');\n    if (!userCtxStore) {\n        throw new Error('No user context store found, did you invoke this function outside of your main <Canvas> component?');\n    }\n    // return the plain user context store\n    if (!namespace) {\n        return {\n            subscribe: userCtxStore.subscribe\n        };\n    }\n    // return a specific user context entry\n    if (namespace && !value) {\n        return derived(userCtxStore, (ctx) => ctx[namespace]);\n    }\n    // we are possibly setting a new user context entry here\n    userCtxStore.update((ctx) => {\n        if (namespace in ctx) {\n            // skip is the default value\n            if (!options || options.existing === 'skip')\n                return ctx;\n            if (options.existing === 'merge') {\n                Object.assign(ctx[namespace], value);\n                return ctx;\n            }\n        }\n        // also handles options.existing === 'replace'\n        ctx[namespace] = value;\n        return ctx;\n    });\n    return userCtxStore.current[namespace];\n}\n", "import { writable } from 'svelte/store';\n/**\n * ### `asyncWritable`\n *\n * Creates a writable store that is initialized with a promise. The store also\n * implements the `then` and `catch` methods of the promise so that it can be\n * used in `await` expressions and `{#await}` blocks of Svelte.\n *\n * ```svelte\n * <script>\n *  import { asyncWritable } from '@threlte/core'\n *\n *  const asyncOp = async () => {\n *    // Do something async\n *  }\n *\n *  const store = asyncWritable(asyncOp())\n *  $: console.log($store) // asyncOp result\n * </script>\n *\n * <h1>\n *  {#await store then data}\n *    // Do something with the data\n *  {/await}\n * </h1>\n * ```\n *\n * If an error occurs in the promise, the error will be logged to the console\n * and the error can be accessed via the `error` property of the store with in\n * turn is a store.\n *\n * ```svelte\n * <script>\n *  import { asyncWritable } from '@threlte/core'\n *\n *  const asyncOp = async () => {\n *    throw new Error('Something went wrong')\n *  }\n *\n *  const store = asyncWritable(asyncOp())\n *  const error = store.error\n *\n *  $: console.log($store) // undefined\n *  $: console.log($error) // Error: Something went wrong\n * </script>\n * ```\n */\nexport const asyncWritable = (promise) => {\n    const store = writable(undefined);\n    const error = writable(undefined);\n    promise\n        .then((result) => {\n        store.set(result);\n    })\n        .catch((e) => {\n        console.error('Error in asyncWritable:', e.message);\n        error.set(e);\n    });\n    return Object.assign(Object.assign(promise, store), { error, promise });\n};\n", "import { asyncWritable } from '../lib/asyncWritable';\nimport { useCache } from '../lib/cache';\nexport const useLoader = (Proto, options = {}) => {\n    const { remember, clear: clearCacheItem } = useCache();\n    // instantiate the loader\n    const loader = new Proto();\n    // extend the loader if necessary\n    options.extend?.(loader);\n    const load = (input, options) => {\n        if (Array.isArray(input)) {\n            // map over the input array and return an array of promises\n            const promises = input.map((url) => {\n                return remember(async () => {\n                    const result = await loader.loadAsync(url, options?.onProgress);\n                    return options?.transform?.(result) ?? result;\n                }, [Proto, url]);\n            });\n            // return an AsyncWritable that resolves to the array of promises\n            const store = asyncWritable(Promise.all(promises));\n            return store; // TODO: Dirty escape hatch\n        }\n        else if (typeof input === 'string') {\n            // debugger\n            const promise = remember(async () => {\n                const result = await loader.loadAsync(input, options?.onProgress);\n                return options?.transform?.(result) ?? result;\n            }, [Proto, input]);\n            // return an AsyncWritable that resolves to the promise\n            const store = asyncWritable(promise);\n            return store; // TODO: Dirty escape hatch\n        }\n        else {\n            // map over the input object and return an array of promises\n            const promises = Object.values(input).map((url) => {\n                return remember(async () => {\n                    const result = await loader.loadAsync(url, options?.onProgress);\n                    return options?.transform?.(result) ?? result;\n                }, [Proto, url]);\n            });\n            // return an AsyncWritable that resolves to the object of promises\n            const store = asyncWritable(Promise.all(promises).then((results) => {\n                return Object.fromEntries(Object.entries(input).map(([key], i) => [key, results[i]]));\n            }));\n            return store; // TODO: Dirty escape hatch\n        }\n    };\n    const clear = (input) => {\n        if (Array.isArray(input)) {\n            input.forEach((url) => {\n                clearCacheItem([Proto, url]);\n            });\n        }\n        else if (typeof input === 'string') {\n            clearCacheItem([Proto, input]);\n        }\n        else {\n            Object.entries(input).forEach(([key, url]) => {\n                clearCacheItem([Proto, key, url]);\n            });\n        }\n    };\n    return {\n        load,\n        clear,\n        loader\n    };\n};\n", "import { get_current_component } from 'svelte/internal';\nimport { writable } from 'svelte/store';\nimport { watch } from './storeUtils';\n/**\n * ### `forwardEventHandlers`\n *\n * Natively, Svelte has no way of passing down event handlers inside a\n * component to a child component. Events have to be hand-wired upstream. This\n * function allows you to forward event handlers from a parent component to a child\n * component as if they were declared on the child component itself.\n *\n * ```svelte\n * <!-- Child.svelte -->\n * <script>\n * \timport { forwardEventHandlers } from '@threlte/core'\n * \tconst dispatchingComponent = forwardEventHandlers()\n * </script>\n *\n * <OtherChildComponent bind:this={$dispatchingComponent} />\n * ```\n *\n * Now, when implementing `<Child>` and adding event handlers via `on:eventname`,\n * those event handlers will be forwarded to `<OtherChildComponent>`:\n *\n * ```svelte\n * <!-- Parent.svelte -->\n * <script>\n * \timport Child from './Child.svelte'\n * </script>\n *\n * <Child on:click={() => console.log('clicked')} />\n * ```\n *\n * If `OtherChildComponent.svelte` now dispatches a `click` event, the event handler\n * in `Parent.svelte` will be called.\n */\nexport const forwardEventHandlers = () => {\n    const component = get_current_component();\n    const dispatchingComponent = writable(undefined);\n    watch(dispatchingComponent, (dispatchingComponent) => {\n        if (!dispatchingComponent)\n            return;\n        Object.entries(component.$$.callbacks).forEach((callback) => {\n            const [key, value] = callback;\n            if (key in dispatchingComponent.$$.callbacks &&\n                Array.isArray(dispatchingComponent.$$.callbacks[key])) {\n                dispatchingComponent.$$.callbacks[key].push(...value);\n            }\n            else {\n                dispatchingComponent.$$.callbacks[key] = value;\n            }\n        });\n    });\n    return dispatchingComponent;\n};\n"],
  "mappings": "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",
  "names": ["children", "_a", "instance", "size", "instance", "cleanup", "ref", "eventNames", "instance", "ctx", "args", "entry", "value", "renderer", "create_if_block", "ctx", "T", "contextName", "options", "_a", "dispatchingComponent"]
}
